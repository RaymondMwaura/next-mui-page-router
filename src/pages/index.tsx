import Head from "next/head";
import axios from "axios";
import { useState } from "react";

const convertBase64toBlob = (
  b64Data: string,
  contentType = "",
  sliceSize = 512
) => {
  const byteCharacters = atob(b64Data);
  const byteArrays = [];

  for (let offset = 0; offset < byteCharacters?.length; offset += sliceSize) {
    const slice = byteCharacters?.slice(offset, offset + sliceSize);
    const byteNumbers = new Array(slice?.length);

    for (let i = 0; i < slice?.length; i += 1) {
      byteNumbers[i] = slice?.charCodeAt(i);
    }

    const byteArray = new Uint8Array(byteNumbers);
    byteArrays?.push(byteArray);
  }

  const blob = new Blob(byteArrays, { type: contentType });
  return blob;
};

export default function Home() {
  const [pdfResponse, setPdfResponse] = useState("");

  const loadPDF = async () => {
    const response = await axios.get("http://localhost:3000/api/return-pdf");
    const data = response?.data;
    const blob = convertBase64toBlob(data, "application/pdf");
    const blobUrl = URL.createObjectURL(blob);
    setPdfResponse(blobUrl);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <button
          onClick={() => loadPDF()}
          style={{
            backgroundColor: "blue",
            fontWeight: "bold",
            width: "200px",
            height: "50px",
            marginLeft: "10px",
            marginTop: "10px",
            borderRadius: "10px",
          }}
        >
          Load PDF
        </button>

        {pdfResponse?.length > 0 && (
          <div>
            <div
              style={{
                width: "50%",
                height: "100%",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
                margin: "0px auto",
                padding: 0,
              }}
            >
              <object
                width="1920"
                height="1080"
                type="application/pdf"
                data={pdfResponse}
              >
                <p>
                  Insert your error message here, if the PDF cannot be
                  displayed.
                </p>
              </object>
            </div>
          </div>
        )}
      </main>
    </>
  );
}
